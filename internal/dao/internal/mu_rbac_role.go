// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// MuRbacRoleDao is the data access object for table mu_rbac_role.
type MuRbacRoleDao struct {
	table   string            // table is the underlying table name of the DAO.
	group   string            // group is the database configuration group name of current DAO.
	columns MuRbacRoleColumns // columns contains all the column names of Table for convenient usage.
}

// MuRbacRoleColumns defines and stores column names for table mu_rbac_role.
type MuRbacRoleColumns struct {
	Id          string //
	Name        string // 名称
	Description string // 描述
	Operator    string // 操作人
	CreateTime  string // 创建时间
	UpdateTime  string // 更新时间
}

// muRbacRoleColumns holds the columns for table mu_rbac_role.
var muRbacRoleColumns = MuRbacRoleColumns{
	Id:          "id",
	Name:        "name",
	Description: "description",
	Operator:    "operator",
	CreateTime:  "create_time",
	UpdateTime:  "update_time",
}

// NewMuRbacRoleDao creates and returns a new DAO object for table data access.
func NewMuRbacRoleDao() *MuRbacRoleDao {
	return &MuRbacRoleDao{
		group:   "default",
		table:   "mu_rbac_role",
		columns: muRbacRoleColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *MuRbacRoleDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *MuRbacRoleDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *MuRbacRoleDao) Columns() MuRbacRoleColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *MuRbacRoleDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *MuRbacRoleDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *MuRbacRoleDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
